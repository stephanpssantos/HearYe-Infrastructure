steps:

# This is a workaround. MS hosted agents are not trusted MS services.
# Therefore, their (constantly changing) IP addresses must be added
# to the KV firewall's whitelist at runtime.

# Azure CLI; Get hosted agent IP and add to KV whitelist
- task: AzureCLI@2
  displayName: 'Get hosted agent IP and add to KV whitelist'
  env:
    KV_NAME: ${{ parameters.kvName }}
  inputs:
    # Name of the ARM connection
    azureSubscription: ${{ parameters.azureSubscription }}
    # All Platforms
    scriptType: 'pscore' 
    scriptLocation: 'inlineScript'
    inlineScript: |
      $ipInfo = $(az rest --method get --url https://api.ipify.org?format=json) | ConvertFrom-JSON
      Write-Host "##vso[task.setvariable variable=hostedagent_ip;issecret=false;isreadonly=true;]$($ipInfo.ip)"
      az keyvault network-rule add --name $env:KV_NAME --ip-address $ipInfo.ip

# Get azuresql-appregsecret from keyvault
- task: AzureKeyVault@1
  displayName: 'Get db key from kv'
  inputs:
    azureSubscription: ${{ parameters.azureSubscription }}
    KeyVaultName: ${{ parameters.kvName }}
    SecretsFilter: 'azuresql-appregsecret'
    RunAsPreJob: false

# Get graph-appregsecret from keyvault
- task: AzureKeyVault@1
  displayName: 'Get graph key from kv'
  inputs:
    azureSubscription: ${{ parameters.azureSubscription }}
    KeyVaultName: ${{ parameters.kvName }}
    SecretsFilter: 'graph-appregsecret'
    RunAsPreJob: false

# Azure CLI; Remove ADO hosted agent from KV whitelist
- task: AzureCLI@2
  displayName: 'Remove ADO hosted agent from KV whitelist'
  env:
    KV_NAME: ${{ parameters.kvName }}
    HA_IP: $(hostedagent_ip)
  inputs:
    # Name of the ARM connection
    azureSubscription: ${{ parameters.azureSubscription }}
    # All Platforms
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az keyvault network-rule remove --name $env:KV_NAME --ip-address $env:HA_IP

# Azure Container Apps ARM template deployment
- task: AzureResourceGroupDeployment@3
  displayName: 'Deploy Container App'
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: ${{ parameters.azureSubscription }}
    action: 'Create Or Update Resource Group' # Options: create Or Update Resource Group, select Resource Group, start, stop, stopWithDeallocate, restart, delete, deleteRG
    resourceGroupName: ${{ parameters.resourceGroup }}
    location: 'westus2' # Required when action = Create Or Update Resource Group
    templateLocation: 'Linked artifact' # Options: linked Artifact, uRL Of The File
    csmFile: '$(System.DefaultWorkingDirectory)/BWA/Server/containerAppARM.json' # Required when  TemplateLocation = Linked Artifact
    csmParametersFile: '$(System.DefaultWorkingDirectory)/BWA/Server/containerAppARM.parameters.json' # Optional
    overrideParameters: >
      -azuresql-appregsecret $(azuresql-appregsecret)
      -graph-appregsecret $(graph-appregsecret) 
      -container-image ${{ format('docker.io/stephansantos/hearye-docker:v1.{0}', parameters.buildId) }}
    # NOTE - $($(parameters.keyVaultAppRegSecret)) is taking the value of a variable (the secret's name) 
    #        and placing it inside variable brackets to call on a variable with that name and get the secret's value
    deploymentMode: 'Incremental' # Options: incremental, complete, validation